---
export interface Props {
  post: any;
}

const { post } = Astro.props;
---

<div class="text-center animation">
  <div class="p-5">
    <a href={post.url}>
      <h1
        class="font-oldstandard text-3xl leading-5 text-blue-900 uppercase"
      >
        {post.frontmatter.title}
      </h1>
    </a>
    <p
      class="font-poppins font-thin text-center mr-16 ml-16 leading-tight text-sm uppercase text-blue-900"
    >
      {post.frontmatter.description}
    </p>
  </div>
</div>

<style>
  .animation {
    opacity: 0;
    transition: all 0.7s ease-out;
    transition-delay: 0.4s;
  }

  .scroll-animation {
    opacity: 1;
    transform: translateX(0);
  }
</style>
<script>
  const the_animation = document.querySelectorAll(".animation");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          // Check for "seen" class and element visibility
          if (
            !entry.target.classList.contains("seen") &&
            (entry.target as HTMLElement).offsetParent !== null
          ) {
            entry.target.classList.add("scroll-animation");
            entry.target.classList.add("seen");

            // Unobserve element after animation (optional)
            observer.unobserve(entry.target);
          }
        }
      });
    },
    { threshold: 0.1 }
  );

  for (let i = 0; i < the_animation.length; i++) {
    const elements = the_animation[i];
    observer.observe(elements);
  }
</script>
